
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОсновныеНачисления(Отказ);
	ДополнительныеНачисления(Отказ);	
	Удержания(Отказ);


КонецПроцедуры

Процедура ОсновныеНачисления(Отказ)
	
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидНачисления;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Подразделение = Подразделение;
		//Движение.Результат = 0;
		//Движение.Факт = 0;
		Движение.Размер = ТекСтрокаОсновныеНачисления.Размер;
		Движение.График = ТекСтрокаОсновныеНачисления.График;
	КонецЦикла;  
	
	Движения.Записать();     
	
	
	//ОКЛАД  
	
	//используем полученные записи регистра ОсновныеНачисления и записи регистра ОкладыСотрудников,
	//чтобы расчитать результат 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник.Представление КАК СотрудникПредставление,
		|	ОсновныеНачисленияДанныеГрафика.Подразделение.Представление КАК ПодразделениеПредставление,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОкладыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниПериодДействия КАК ДниПлан,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДниФакт
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Оклад) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОкладыСотрудников.СрезПоследних(&Дата, ) КАК ОкладыСотрудниковСрезПоследних
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ОкладыСотрудниковСрезПоследних.Сотрудник
		|			И ОсновныеНачисленияДанныеГрафика.Подразделение = ОкладыСотрудниковСрезПоследних.Подразделение";     
	
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();
	
	//Для каждой ранее записанной в регистр строки расчитаем Результат 	 
	
	Для каждого ТекСтрока Из Движения.ОсновныеНачисления Цикл 
		//проверим вид расчета для текущей строки
		   
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад  Тогда
			
			//перейти к началу выборки
			Выборка.Сбросить();
			//найти значения выборки по номеру ТекСтроки
			Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки"); 
			
			// Проверить установлен ли оклад в разрезе сотрудник+подразделение  
			Если Выборка.Оклад = 0 Тогда
				//оклад не установлен, выдать сообщение об этом и отказаться от проведения
				Сообщить("Ошибка в строке №" + Выборка.НомерСтроки + " Не установлен оклад для сотрудника " 
				+ Выборка.СотрудникПредставление + " в подразделении: " + Выборка.ПодразделениеПредставление);
				Отказ = Истина;
			Иначе 
				//оклад установлен
				ТекСтрока.Результат = Выборка.Оклад / Выборка.ДниПлан * Выборка.ДниФакт;	
				ТекСтрока.Факт      = Выборка.ДниФакт;
				ТекСтрока.Размер    = Выборка.Оклад;				
			КонецЕсли;
			
		Иначе
			Продолжить;			
		КонецЕсли;
		
	КонецЦикла;       
		
	Движения.ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры

Процедура ДополнительныеНачисления(Отказ)
	
	// регистр ДополнительныеНачисления
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидНачисления;
		Движение.ПериодРегистрации = Дата;
		Если Движение.ВидРасчета = ПланыВидовРасчета.ДополнительныеНачисления.Премия ИЛИ
			Движение.ВидРасчета = ПланыВидовРасчета.ДополнительныеНачисления.Подарок Тогда 
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Дата,-1));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Дата,-1));
		Иначе	
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		КонецЕсли;
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Подразделение = Подразделение;		
		Движение.Размер = ТекСтрокаДополнительныеНачисления.Размер;	
		Движение.Процент = ТекСтрокаДополнительныеНачисления.Процент; 
 
		
		//Движение.Результат = 0;  

	КонецЦикла;
	
		Движения.Записать(); 
	

	//ПОДАРОК

	Для каждого ТекСтрока Из Движения.ДополнительныеНачисления Цикл 
		//проверим вид расчета
		
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ДополнительныеНачисления.Подарок Тогда
			
			Движение.Результат = Движение.Размер;
			
		Иначе
			Продолжить;			
		КонецЕсли;
		
	КонецЦикла;   
	
		
	//ПРЕМИЯ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК РезультатБазаОсн,
		|	ЕСТЬNULL(ДополнительныеНачисленияБазаДополнительныеНачисления.РезультатБаза, 0) КАК РезультатБазаДоп,
		|	ЕСТЬNULL(ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки, ДополнительныеНачисленияБазаДополнительныеНачисления.НомерСтроки) КАК НомерСтроки
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
		|			&МассивИзмерений,
		|			&МассивИзмерений,
		|			,
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Премия) КАК ДополнительныеНачисленияБазаОсновныеНачисления
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисления.БазаДополнительныеНачисления(
		|				&МассивИзмерений,
		|				&МассивИзмерений,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Премия) КАК ДополнительныеНачисленияБазаДополнительныеНачисления
		|		ПО ДополнительныеНачисленияБазаОсновныеНачисления.Сотрудник = ДополнительныеНачисленияБазаДополнительныеНачисления.Сотрудник
		|			И ДополнительныеНачисленияБазаОсновныеНачисления.Подразделение = ДополнительныеНачисленияБазаДополнительныеНачисления.Подразделение";
	
	МассивИзмерений = Новый Массив;
	МассивИзмерений.Добавить("Сотрудник");
	МассивИзмерений.Добавить("Подразделение");
	
	Запрос.УстановитьПараметр("МассивИзмерений", МассивИзмерений);   
	Запрос.УстановитьПараметр("Премия", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого ТекСтрока Из Движения.ДополнительныеНачисления Цикл 
		//проверим вид расчета
				
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ДополнительныеНачисления.Премия Тогда
			
			//если вид расчета = премия
			//перейти к началу выборки
			Выборка.Сбросить();
			//перейти к записям выборки по номеру ТекСтроки
			Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки");
			
			Если НЕ ЗначениеЗаполнено(Выборка.РезультатБазаОсн) И НЕ ЗначениеЗаполнено(Выборка.РезультатБазаДоп) Тогда
				//если оклад не начислен, выдать сообщение и отменить проведение
				Сообщить("Ошибка в строке №" + ТекСтрока.НомерСтроки + " У сотрудника нет основных начислений за прошлый месяц. Премия не может быть установлена!");
				Отказ = Истина;
			Иначе  
				ТекСтрока.Результат = (Выборка.РезультатБазаОсн + Выборка.РезультатБазаДоп) / 100 * ТекСтрока.Процент;				
			КонецЕсли; 
			
		Иначе
			Продолжить;			
		КонецЕсли;
		
	КонецЦикла;

	Движения.ДополнительныеНачисления.Записать(,Истина);   
	
КонецПроцедуры  

Процедура Удержания(Отказ)
	
	Перем Выборка, Движение, Запрос, МассивИзмерений, РезультатЗапроса, ТекСтрока, ТекСтрокаУдержания;
	
	// регистр Удержания
	Движения.Удержания.Записывать = Истина;
	Для Каждого ТекСтрокаУдержания Из Удержания Цикл
		Движение = Движения.Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаУдержания.ВидНачисления;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.Сотрудник = ТекСтрокаУдержания.Сотрудник;
		Движение.Подразделение = Подразделение;
		Движение.Процент = ТекСтрокаУдержания.Процент;
		//Движение.Результат = 0;
	КонецЦикла; 
	
	Движения.Записать();  
	
	
	//НДФЛ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(УдержанияБазаОсновныеНачисления.НомерСтроки, УдержанияБазаДополнительныеНачисления.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(УдержанияБазаОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(УдержанияБазаДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
	|ИЗ
	|	РегистрРасчета.Удержания.БазаОсновныеНачисления(
	|			&МассивИзмерений,
	|			&МассивИзмерений,
	|			,
	|			Регистратор = &Ссылка
	|				И ВидРасчета = &НДФЛ) КАК УдержанияБазаОсновныеНачисления
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаДополнительныеНачисления(
	|				&МассивИзмерений,
	|				&МассивИзмерений,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &НДФЛ) КАК УдержанияБазаДополнительныеНачисления
	|		ПО УдержанияБазаОсновныеНачисления.Сотрудник = УдержанияБазаДополнительныеНачисления.Сотрудник
	|			И УдержанияБазаОсновныеНачисления.Подразделение = УдержанияБазаДополнительныеНачисления.Подразделение";
	
	МассивИзмерений = Новый Массив;
	МассивИзмерений.Добавить("Сотрудник");
	МассивИзмерений.Добавить("Подразделение");
	
	Запрос.УстановитьПараметр("МассивИзмерений", МассивИзмерений);
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого ТекСтрока Из Движения.Удержания Цикл 
		//проверим вид расчета
		
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.Удержания.НДФЛ Тогда
			
			//если вид расчета = премия
			//перейти к началу выборки
			Выборка.Сбросить();
			//перейти к записям выборки по номеру ТекСтроки
			Выборка.НайтиСледующий(ТекСтрока.НомерСтроки, "НомерСтроки");
			
			Если НЕ ЗначениеЗаполнено(Выборка.БазаОсн) И НЕ ЗначениеЗаполнено(Выборка.БазаДоп) Тогда
				//если оклад не начислен, выдать сообщение и отменить проведение
				Сообщить("Ошибка в строке №" + ТекСтрока.НомерСтроки + " У сотрудника нет начислений за текущий месяц. НДФЛ не рассчитан!");
				Отказ = Истина;
			Иначе  
				ТекСтрока.Размер = Выборка.БазаОсн + Выборка.БазаДоп; 
				ТекСтрока.Результат = ТекСтрока.Размер / 100 * ТекСтрока.Процент;				
			КонецЕсли; 
			
		Иначе
			Продолжить;			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Удержания.Записать(,Истина);

КонецПроцедуры 



